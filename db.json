{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/image/marginPc.png","path":"image/marginPc.png","modified":1,"renderable":0},{"_id":"source/image/marginB.png","path":"image/marginB.png","modified":1,"renderable":0},{"_id":"themes/BlueLake/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/css/highlight.styl","path":"css/highlight.styl","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/css/style-dark.styl","path":"css/style-dark.styl","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.woff","path":"iconfont/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/js/toctotop.js","path":"js/toctotop.js","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.svg","path":"iconfont/iconfont.svg","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/js/search.json.js","path":"js/search.json.js","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.ttf","path":"iconfont/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.eot","path":"iconfont/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/js/totop.js","path":"js/totop.js","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/img/bg.jpg","path":"img/bg.jpg","modified":1,"renderable":1},{"_id":"source/image/process.png","path":"image/process.png","modified":1,"renderable":0},{"_id":"themes/BlueLake/source/share/js/qrcode.js","path":"share/js/qrcode.js","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/share/js/social-share.js","path":"share/js/social-share.js","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/img/bg-dark.jpg","path":"img/bg-dark.jpg","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/share/fonts/iconfont.eot","path":"share/fonts/iconfont.eot","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/share/fonts/iconfont.woff","path":"share/fonts/iconfont.woff","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/share/css/share.styl","path":"share/css/share.styl","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/share/fonts/iconfont.ttf","path":"share/fonts/iconfont.ttf","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/share/fonts/iconfont.svg","path":"share/fonts/iconfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/BlueLake/README.en.md","hash":"4fd8231fe6eb7774dae4e17871b6f8a795be3c96","modified":1560936891487},{"_id":"themes/BlueLake/LICENSE","hash":"3e191ca3f51efc111863c4941051291a696ef43e","modified":1560936891486},{"_id":"themes/BlueLake/README.md","hash":"086ddf7bca540a22f2b7aeaeb5aafb869d5dfe7f","modified":1560936891488},{"_id":"themes/BlueLake/_config.yml","hash":"3d7f957c29e1971acaf5bad205f6f8790c35cb05","modified":1560939861463},{"_id":"themes/BlueLake/package.json","hash":"e06eea20c64b2821631a49e8902e645bad2c5102","modified":1560936891530},{"_id":"source/_posts/antd踩过的坑.md","hash":"18634c8f0806ec93681b6c56d5d5183dfa316452","modified":1562039077687},{"_id":"source/_posts/margin折叠.md","hash":"c2e451b030f4f9252eddb96bcf50bbffbe3d5adf","modified":1562903138538},{"_id":"source/_posts/复制.md","hash":"0d7ed0f1ab019a8216a9a63993dc71616b9c088d","modified":1563525786819},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1561002592535},{"_id":"source/_posts/移动端兼容.md","hash":"9d15e689a1231da38ca4b47d767f32696ac9a397","modified":1560940651917},{"_id":"source/_posts/下载文件.md","hash":"35571894be955ae7463b026437e02e7d4358f7c5","modified":1563519979162},{"_id":"source/_posts/ts学习笔记.md","hash":"dece3de89f9dab6e37649e49835bacd60f217a4d","modified":1561548366822},{"_id":"source/image/marginPc.png","hash":"abbed3d1fbd9aa3f0b618eb0ac4bcded6aa090d6","modified":1562901521939},{"_id":"themes/BlueLake/layout/archive.jade","hash":"0497469c869f0ac28f150295dbddf6920e6582c1","modified":1560936891522},{"_id":"source/image/marginB.png","hash":"c8e05bedab8f3f66301476124a81879b18b6472b","modified":1562901536149},{"_id":"source/_posts/电商流程.md","hash":"b3138608cc93247347a4ff0e7cab041703b27b75","modified":1562932307826},{"_id":"themes/BlueLake/layout/base.jade","hash":"a6a4c18c0c2797f051198ebc50f7d8589b92f3a9","modified":1560936891523},{"_id":"themes/BlueLake/layout/index.jade","hash":"ec2a52c8e38c0f164efe591540d39602f82925b1","modified":1560936891525},{"_id":"themes/BlueLake/layout/category.jade","hash":"384e2e2588ecab3f518f03f11f2b052d3827fad8","modified":1560936891524},{"_id":"themes/BlueLake/layout/page.jade","hash":"7d2a48f6a902605fd6cfc237e3c2f9c02d76492e","modified":1560936891526},{"_id":"themes/BlueLake/layout/post.jade","hash":"fcca4a1bb09cc5b7f1328f5871ef2b5d36abcb49","modified":1560936891528},{"_id":"themes/BlueLake/layout/tag.jade","hash":"835da21846c730f0e3e344dc7e2e59154030b4f7","modified":1560936891529},{"_id":"themes/BlueLake/languages/de-DE.yml","hash":"9a6f8a63f5cdd7f579bf8310398301a759c2a6d2","modified":1560936891491},{"_id":"themes/BlueLake/languages/en.yml","hash":"a0f828574b5e90b83eeca4c5a80958459113f2b4","modified":1560936891492},{"_id":"themes/BlueLake/languages/es-ES.yml","hash":"bb4b241b45840234922ad4a170d42c9582c0c2ce","modified":1560936891493},{"_id":"themes/BlueLake/languages/fr-FR.yml","hash":"420566a5a200394e45841a2e2223b3fb9625680d","modified":1560936891494},{"_id":"themes/BlueLake/languages/ko.yml","hash":"27bac975b25998012fe7317b2cf3e6c253bc2ab2","modified":1560936891495},{"_id":"themes/BlueLake/languages/tr.yml","hash":"89a834a6b6616ac7289968cace76e2fbf0335787","modified":1560936891496},{"_id":"themes/BlueLake/source/favicon.ico","hash":"94e5d25d942bff5479470322454c951f2ddebac6","modified":1560936891538},{"_id":"themes/BlueLake/languages/zh-CN.yml","hash":"7cb3fd09b74c39fbbed2b0e079d453c45b2085bf","modified":1560936891497},{"_id":"themes/BlueLake/languages/zh-TW.yml","hash":"f0ce05b7f99d7e8a37ce899b4875e5b03133cf2c","modified":1560936891498},{"_id":"themes/BlueLake/source/apple-touch-icon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1560936891531},{"_id":"themes/BlueLake/layout/_partial/after_footer.jade","hash":"e8e98c99b8f9e5f260403903b875a2f08bfb2577","modified":1560936891501},{"_id":"themes/BlueLake/layout/_partial/comment_count.jade","hash":"52e4cacd58d5e0061924189ad75e0c3bf622aa7f","modified":1560936891502},{"_id":"themes/BlueLake/layout/_partial/comments.jade","hash":"ca1bf06561331f072c5d85b5ffafc0721c8c7955","modified":1560936891504},{"_id":"themes/BlueLake/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1560936891509},{"_id":"themes/BlueLake/layout/_partial/footer.jade","hash":"7736811d57583aa792f966ed260fb1e9b5a8e505","modified":1560936891506},{"_id":"themes/BlueLake/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1560936891508},{"_id":"themes/BlueLake/layout/_partial/comments_js.jade","hash":"f7722e4e3edcaaafa10b37c18718ee79faef6e00","modified":1560936891505},{"_id":"themes/BlueLake/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1560936891512},{"_id":"themes/BlueLake/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1560936891507},{"_id":"themes/BlueLake/layout/_partial/totop.jade","hash":"3e4141538285aef2bd019832ba62bafd094c6097","modified":1560936891513},{"_id":"themes/BlueLake/layout/_widget/archive.jade","hash":"082ae16dad18ada28913772675861d7230134bea","modified":1560936891515},{"_id":"themes/BlueLake/layout/_partial/search.jade","hash":"1c988c7e1f716036e428ee16b8005a7b1bfb33c7","modified":1560936891510},{"_id":"themes/BlueLake/layout/_widget/category.jade","hash":"ba43bd011d64cd86fa420677c9000d328f4f6114","modified":1560936891516},{"_id":"themes/BlueLake/layout/_partial/share.jade","hash":"db5b44e3124558ca9468faea4bc9d27839c951e8","modified":1560936891511},{"_id":"themes/BlueLake/layout/_widget/links.jade","hash":"ff46afdedc1ab3c075ffed686b98f23aed066124","modified":1560936891517},{"_id":"themes/BlueLake/layout/_widget/recent_comments.jade","hash":"f8ae55d5514fe493651ec04fbe73cb5fc482f7cd","modified":1560936891518},{"_id":"themes/BlueLake/layout/_widget/recent_posts.jade","hash":"a0309137277323f2fd61a3c6691e1bc51026f711","modified":1560936891519},{"_id":"themes/BlueLake/layout/_widget/tag.jade","hash":"3df9a00a21d3bc151026b2d403a99c28fe1ccd13","modified":1560936891520},{"_id":"themes/BlueLake/layout/_widget/weibo.jade","hash":"53e99461ae7f8efb2a1e78ad3090dd93d18bcd5c","modified":1560936891521},{"_id":"themes/BlueLake/source/css/highlight.styl","hash":"be9ad73454b7029311caafd8e1faa469a5d4f58d","modified":1560936891535},{"_id":"themes/BlueLake/source/css/style.styl","hash":"19036381fde9214a721adfce6a9e1d85daf42004","modified":1560936891537},{"_id":"themes/BlueLake/source/css/style-dark.styl","hash":"019565e55b7535545cbff03b99dd3c1d4a54cc42","modified":1560936891536},{"_id":"themes/BlueLake/source/iconfont/iconfont.woff","hash":"df2bd849134cbd02beb385e5061a30b923c99058","modified":1560936891544},{"_id":"themes/BlueLake/source/css/highlight-dark.styl","hash":"e6079d1bfdb68b37b111bccc08e4f7d2be9f5eaa","modified":1560936891533},{"_id":"themes/BlueLake/source/js/toctotop.js","hash":"ad6386bc746ff375715ca9da17af4716ea86e06a","modified":1560936891552},{"_id":"themes/BlueLake/source/iconfont/iconfont.svg","hash":"2b6a0b21bf63bdf746130117baf432fcb44ad210","modified":1560936891542},{"_id":"themes/BlueLake/source/js/search.json.js","hash":"a0e8dfee9b9845aabd64360d497df7c0767b7235","modified":1560936891551},{"_id":"themes/BlueLake/source/iconfont/iconfont.ttf","hash":"5770696cc0d19d9c9479912a5cf54c9dd4ab24c4","modified":1560936891543},{"_id":"themes/BlueLake/source/iconfont/iconfont.eot","hash":"e664dd848ca65fe3aca4acfc234ff9c18ffd4c33","modified":1560936891540},{"_id":"themes/BlueLake/source/js/totop.js","hash":"5b1131830209c2daaf6fe34c5e39ab7c1059bfa4","modified":1560936891553},{"_id":"themes/BlueLake/source/img/bg.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1560936891549},{"_id":"source/image/process.png","hash":"109ab9943d2e75decb8772ca1e3ea530165f8799","modified":1561364266815},{"_id":"themes/BlueLake/source/share/js/qrcode.js","hash":"9caa0d9a9ba4409a3f77540a1b15a7617aeb28e8","modified":1560936891564},{"_id":"themes/BlueLake/source/share/js/social-share.js","hash":"9bfe34fe7691833e90815c5c862545bde581cf29","modified":1560936891565},{"_id":"themes/BlueLake/source/img/bg-dark.jpg","hash":"0d2c406f1a9b3b74d6defda398239b0113737787","modified":1560936891547},{"_id":"themes/BlueLake/source/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1560936891558},{"_id":"themes/BlueLake/source/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1560936891562},{"_id":"themes/BlueLake/source/share/css/share.styl","hash":"dea3b7a6adb17969e57e5c3d71876245016be21a","modified":1560936891556},{"_id":"themes/BlueLake/source/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1560936891560},{"_id":"themes/BlueLake/source/share/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1560936891559},{"_id":"public/content.json","hash":"9324148846e1265e47175cae5c9785c38d35de2e","modified":1563525814907},{"_id":"public/2019/07/12/margin折叠/index.html","hash":"1b3aac9d2ed8b3572e005114ce9782dd48858b49","modified":1563525814935},{"_id":"public/2019/07/02/antd踩过的坑/index.html","hash":"9c614f67baf4eb38417c299c03ff1b5a816cf958","modified":1563525814935},{"_id":"public/2019/06/26/ts学习笔记/index.html","hash":"2894a79c663b30feb8cfd7aed7a5281e18af2b58","modified":1563525814935},{"_id":"public/2019/06/20/hello-world/index.html","hash":"970f64f55793090bb3da576a27f6750e9b8d50b0","modified":1563525814936},{"_id":"public/2019/06/20/复制/index.html","hash":"1a0db45176319ef9112b4cac231f77b9f519cfaf","modified":1563525814936},{"_id":"public/2019/06/19/移动端兼容/index.html","hash":"f96faa269e6a0abd13d5828f791f713ab540c012","modified":1563525814936},{"_id":"public/2019/06/19/下载文件/index.html","hash":"0e263776105d0e52a529eaded5d966d32be20301","modified":1563525814936},{"_id":"public/archives/index.html","hash":"e8b381cdd161bae6a6cf0fca5c5a1182170b5a49","modified":1563525814936},{"_id":"public/archives/2019/index.html","hash":"e8b381cdd161bae6a6cf0fca5c5a1182170b5a49","modified":1563525814937},{"_id":"public/archives/2019/06/index.html","hash":"b38d5e084dc9e3482fab08ae2dd74e5e59332d6a","modified":1563525814937},{"_id":"public/2019/06/20/电商流程/index.html","hash":"2d48db4fbd863fadcbdf1b1c53120fb2d72daa83","modified":1563525814937},{"_id":"public/archives/2019/07/index.html","hash":"951d4a9bc5332c07112f16433eb5f16d42d9a5d6","modified":1563525814943},{"_id":"public/index.html","hash":"7ad5eeefc26883386fdbd11f094e0c4a509df9e4","modified":1563525814943},{"_id":"public/image/marginPc.png","hash":"abbed3d1fbd9aa3f0b618eb0ac4bcded6aa090d6","modified":1563525814943},{"_id":"public/image/marginB.png","hash":"c8e05bedab8f3f66301476124a81879b18b6472b","modified":1563525814943},{"_id":"public/favicon.ico","hash":"94e5d25d942bff5479470322454c951f2ddebac6","modified":1563525814943},{"_id":"public/apple-touch-icon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1563525814943},{"_id":"public/iconfont/iconfont.woff","hash":"df2bd849134cbd02beb385e5061a30b923c99058","modified":1563525814944},{"_id":"public/iconfont/iconfont.svg","hash":"2b6a0b21bf63bdf746130117baf432fcb44ad210","modified":1563525814944},{"_id":"public/iconfont/iconfont.ttf","hash":"5770696cc0d19d9c9479912a5cf54c9dd4ab24c4","modified":1563525814944},{"_id":"public/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1563525814944},{"_id":"public/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1563525814944},{"_id":"public/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1563525814944},{"_id":"public/share/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1563525814945},{"_id":"public/iconfont/iconfont.eot","hash":"e664dd848ca65fe3aca4acfc234ff9c18ffd4c33","modified":1563525815366},{"_id":"public/css/highlight.css","hash":"932879716cbce6f9a1b830070ed514082398f1ca","modified":1563525815372},{"_id":"public/css/highlight-dark.css","hash":"e6f5491318fbba0995c17c33ff8f4d8af957c2cb","modified":1563525815372},{"_id":"public/js/toctotop.js","hash":"ad6386bc746ff375715ca9da17af4716ea86e06a","modified":1563525815373},{"_id":"public/js/search.json.js","hash":"a0e8dfee9b9845aabd64360d497df7c0767b7235","modified":1563525815373},{"_id":"public/js/totop.js","hash":"5b1131830209c2daaf6fe34c5e39ab7c1059bfa4","modified":1563525815373},{"_id":"public/share/css/share.css","hash":"f2c752f5eec4f88233c5f2d09807c01adee63100","modified":1563525815373},{"_id":"public/img/bg.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1563525815373},{"_id":"public/share/js/social-share.js","hash":"9bfe34fe7691833e90815c5c862545bde581cf29","modified":1563525815682},{"_id":"public/img/bg-dark.jpg","hash":"0d2c406f1a9b3b74d6defda398239b0113737787","modified":1563525815683},{"_id":"public/css/style-dark.css","hash":"b6489efd229955a23b95f4829b5404eaaa9e6a99","modified":1563525815692},{"_id":"public/css/style.css","hash":"7b429c38dac3c6aec43abc07ac673a41e5a4b422","modified":1563525815693},{"_id":"public/share/js/qrcode.js","hash":"9caa0d9a9ba4409a3f77540a1b15a7617aeb28e8","modified":1563525815706},{"_id":"public/image/process.png","hash":"109ab9943d2e75decb8772ca1e3ea530165f8799","modified":1563525815709}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"antd踩过的坑","date":"2019-07-02T03:40:55.000Z","_content":"\n## react antd 踩过的坑\n\n1. Select,Cascader,Datepicker 的下拉框随着页面的滚动而滚动\n\n- 原因：下拉框默认相对于页面 body 定位\n- 解决方案：让下拉框相对于父级元素定位即可\n\n  - Select,Cascader\n\n  ```javascript\n  getPopupContainer={trigger => trigger.parentNode}\n  ```\n\n  - Datepicker\n\n  ```javascript\n  getCalendarContainer={trigger => trigger.parentNode}\n  ```\n","source":"_posts/antd踩过的坑.md","raw":"---\ntitle: antd踩过的坑\ndate: 2019-07-02 11:40:55\ntags:\n---\n\n## react antd 踩过的坑\n\n1. Select,Cascader,Datepicker 的下拉框随着页面的滚动而滚动\n\n- 原因：下拉框默认相对于页面 body 定位\n- 解决方案：让下拉框相对于父级元素定位即可\n\n  - Select,Cascader\n\n  ```javascript\n  getPopupContainer={trigger => trigger.parentNode}\n  ```\n\n  - Datepicker\n\n  ```javascript\n  getCalendarContainer={trigger => trigger.parentNode}\n  ```\n","slug":"antd踩过的坑","published":1,"updated":"2019-07-02T03:44:37.687Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy9uwfa20000jctsb302i8ch","content":"<h2 id=\"react-antd-踩过的坑\"><a href=\"#react-antd-踩过的坑\" class=\"headerlink\" title=\"react antd 踩过的坑\"></a>react antd 踩过的坑</h2><ol>\n<li>Select,Cascader,Datepicker 的下拉框随着页面的滚动而滚动</li>\n</ol>\n<ul>\n<li><p>原因：下拉框默认相对于页面 body 定位</p>\n</li>\n<li><p>解决方案：让下拉框相对于父级元素定位即可</p>\n<ul>\n<li>Select,Cascader</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getPopupContainer=&#123;trigger =&gt; trigger.parentNode&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Datepicker</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getCalendarContainer=&#123;trigger =&gt; trigger.parentNode&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"react-antd-踩过的坑\"><a href=\"#react-antd-踩过的坑\" class=\"headerlink\" title=\"react antd 踩过的坑\"></a>react antd 踩过的坑</h2><ol>\n<li>Select,Cascader,Datepicker 的下拉框随着页面的滚动而滚动</li>\n</ol>\n<ul>\n<li><p>原因：下拉框默认相对于页面 body 定位</p>\n</li>\n<li><p>解决方案：让下拉框相对于父级元素定位即可</p>\n<ul>\n<li>Select,Cascader</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getPopupContainer=&#123;trigger =&gt; trigger.parentNode&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>Datepicker</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getCalendarContainer=&#123;trigger =&gt; trigger.parentNode&#125;</span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n"},{"title":"复制","date":"2019-06-20T01:53:03.000Z","_content":"\n## 使用`document.execCommand(\"Copy\");`来实现把复制的内容复制到粘贴板\n\n---\n\n### 思路\n\n1. 创建 input 框，value 值为需要复制的内容，设置 readonly=\"readonly\"禁止唤起键盘\n2. 使用 getElementById 获取 input 框\n3. 调用.select()方法选中 input 框的内容（ios 中.select 方法无效）\n4. 最后调用 document.execCommand(\"Copy\") 实现复制\n\n---\n\n### 具体代码（最初版）\n\nhtml:\n\n```html\n<input\n  value=\"copy 的内容\"\n  id=\"copy\"\n  readonly=\"readonly\"\n  style=\"opacity: 0; position: absolute\"\n/>\n```\n\njs（只适合安卓端）:\n\n```javascript\nconst urlLink = document.getElementById(\"copy\");\nurlLink.select();\ndocument.execCommand(\"copy\");\nmessage.success(\"分享链接已复制成功！\", 1);\n```\n\n---\n\n### 遇到的问题及解决方案\n\n1. 如果不想显示 input 框，可以将 input 框的 opacity 属性设置为 0，在使用绝对定位使其脱离文档流。注意，**不能将 input 框的 display 属性设置为 none 或将 visibility 设置为 hidden 或设置 disabled，这会导致复制失败**\n\n2. ie 之外的浏览器 document.execCommand(\"copy\");这个必须在**由用户操作触发的点击事件线程中执行**，在 axios 异步的回调函数中执行是不允许的。解决的方案是使用 async 和 await，将异步的操作变为同步即可\n\n3. ios 中无法使用.select()方法选中文字，需要重写选中文字的方法\n\n```javascript\nselectText = (textbox, startIndex, stopIndex) => {\n  if (textbox.createTextRange) {\n    //ie\n    const range = textbox.createTextRange();\n    range.collapse(true);\n    range.moveStart(\"character\", startIndex); //起始光标\n    range.moveEnd(\"character\", stopIndex - startIndex); //结束光标\n    range.select(); //不兼容苹果\n  } else {\n    //firefox/chrome\n    textbox.setSelectionRange(startIndex, stopIndex);\n    textbox.focus();\n  }\n};\n```\n\n---\n\n### 具体代码（最终版，兼容双端）\n\n```javascript\nlet urlLink = document.getElementById(\"urlCopy\");\nthis.selectText(urlLink, 0, url.length);\nconsole.log(document.execCommand(\"copy\"), \"execCommand\");\ndocument.execCommand(\"Copy\");\nurlLink.blur();\n```\n\n---\n\n---\n\n## 使用 react-copy-to-clipboard 插件实现\n\n文档地址： <https://github.com/nkbt/react-copy-to-clipboard/>\n\n具体代码\n\n```javascript\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n<CopyToClipboard\n  text={this.state.value}\n  onCopy={() => this.setState({ copied: true })}\n>\n  <span>Copy to clipboard with span</span>\n</CopyToClipboard>;\n```\n","source":"_posts/复制.md","raw":"---\ntitle: 复制\ndate: 2019-06-20 09:53:03\ntags:\n---\n\n## 使用`document.execCommand(\"Copy\");`来实现把复制的内容复制到粘贴板\n\n---\n\n### 思路\n\n1. 创建 input 框，value 值为需要复制的内容，设置 readonly=\"readonly\"禁止唤起键盘\n2. 使用 getElementById 获取 input 框\n3. 调用.select()方法选中 input 框的内容（ios 中.select 方法无效）\n4. 最后调用 document.execCommand(\"Copy\") 实现复制\n\n---\n\n### 具体代码（最初版）\n\nhtml:\n\n```html\n<input\n  value=\"copy 的内容\"\n  id=\"copy\"\n  readonly=\"readonly\"\n  style=\"opacity: 0; position: absolute\"\n/>\n```\n\njs（只适合安卓端）:\n\n```javascript\nconst urlLink = document.getElementById(\"copy\");\nurlLink.select();\ndocument.execCommand(\"copy\");\nmessage.success(\"分享链接已复制成功！\", 1);\n```\n\n---\n\n### 遇到的问题及解决方案\n\n1. 如果不想显示 input 框，可以将 input 框的 opacity 属性设置为 0，在使用绝对定位使其脱离文档流。注意，**不能将 input 框的 display 属性设置为 none 或将 visibility 设置为 hidden 或设置 disabled，这会导致复制失败**\n\n2. ie 之外的浏览器 document.execCommand(\"copy\");这个必须在**由用户操作触发的点击事件线程中执行**，在 axios 异步的回调函数中执行是不允许的。解决的方案是使用 async 和 await，将异步的操作变为同步即可\n\n3. ios 中无法使用.select()方法选中文字，需要重写选中文字的方法\n\n```javascript\nselectText = (textbox, startIndex, stopIndex) => {\n  if (textbox.createTextRange) {\n    //ie\n    const range = textbox.createTextRange();\n    range.collapse(true);\n    range.moveStart(\"character\", startIndex); //起始光标\n    range.moveEnd(\"character\", stopIndex - startIndex); //结束光标\n    range.select(); //不兼容苹果\n  } else {\n    //firefox/chrome\n    textbox.setSelectionRange(startIndex, stopIndex);\n    textbox.focus();\n  }\n};\n```\n\n---\n\n### 具体代码（最终版，兼容双端）\n\n```javascript\nlet urlLink = document.getElementById(\"urlCopy\");\nthis.selectText(urlLink, 0, url.length);\nconsole.log(document.execCommand(\"copy\"), \"execCommand\");\ndocument.execCommand(\"Copy\");\nurlLink.blur();\n```\n\n---\n\n---\n\n## 使用 react-copy-to-clipboard 插件实现\n\n文档地址： <https://github.com/nkbt/react-copy-to-clipboard/>\n\n具体代码\n\n```javascript\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n<CopyToClipboard\n  text={this.state.value}\n  onCopy={() => this.setState({ copied: true })}\n>\n  <span>Copy to clipboard with span</span>\n</CopyToClipboard>;\n```\n","slug":"复制","published":1,"updated":"2019-07-19T08:43:06.819Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy9uwfad0001jctsd8lljpbz","content":"<h2 id=\"使用document-execCommand-quot-Copy-quot-来实现把复制的内容复制到粘贴板\"><a href=\"#使用document-execCommand-quot-Copy-quot-来实现把复制的内容复制到粘贴板\" class=\"headerlink\" title=\"使用document.execCommand(&quot;Copy&quot;);来实现把复制的内容复制到粘贴板\"></a>使用<code>document.execCommand(&quot;Copy&quot;);</code>来实现把复制的内容复制到粘贴板</h2><hr>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><ol>\n<li>创建 input 框，value 值为需要复制的内容，设置 readonly=”readonly”禁止唤起键盘</li>\n<li>使用 getElementById 获取 input 框</li>\n<li>调用.select()方法选中 input 框的内容（ios 中.select 方法无效）</li>\n<li>最后调用 document.execCommand(“Copy”) 实现复制</li>\n</ol>\n<hr>\n<h3 id=\"具体代码（最初版）\"><a href=\"#具体代码（最初版）\" class=\"headerlink\" title=\"具体代码（最初版）\"></a>具体代码（最初版）</h3><p>html:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">value</span>=<span class=\"string\">\"copy 的内容\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">id</span>=<span class=\"string\">\"copy\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">readonly</span>=<span class=\"string\">\"readonly\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">\"opacity: 0; position: absolute\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>js（只适合安卓端）:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> urlLink = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"copy\"</span>);</span><br><span class=\"line\">urlLink.select();</span><br><span class=\"line\"><span class=\"built_in\">document</span>.execCommand(<span class=\"string\">\"copy\"</span>);</span><br><span class=\"line\">message.success(<span class=\"string\">\"分享链接已复制成功！\"</span>, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"遇到的问题及解决方案\"><a href=\"#遇到的问题及解决方案\" class=\"headerlink\" title=\"遇到的问题及解决方案\"></a>遇到的问题及解决方案</h3><ol>\n<li><p>如果不想显示 input 框，可以将 input 框的 opacity 属性设置为 0，在使用绝对定位使其脱离文档流。注意，<strong>不能将 input 框的 display 属性设置为 none 或将 visibility 设置为 hidden 或设置 disabled，这会导致复制失败</strong></p>\n</li>\n<li><p>ie 之外的浏览器 document.execCommand(“copy”);这个必须在<strong>由用户操作触发的点击事件线程中执行</strong>，在 axios 异步的回调函数中执行是不允许的。解决的方案是使用 async 和 await，将异步的操作变为同步即可</p>\n</li>\n<li><p>ios 中无法使用.select()方法选中文字，需要重写选中文字的方法</p>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selectText = <span class=\"function\">(<span class=\"params\">textbox, startIndex, stopIndex</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (textbox.createTextRange) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//ie</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> range = textbox.createTextRange();</span><br><span class=\"line\">    range.collapse(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    range.moveStart(<span class=\"string\">\"character\"</span>, startIndex); <span class=\"comment\">//起始光标</span></span><br><span class=\"line\">    range.moveEnd(<span class=\"string\">\"character\"</span>, stopIndex - startIndex); <span class=\"comment\">//结束光标</span></span><br><span class=\"line\">    range.select(); <span class=\"comment\">//不兼容苹果</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//firefox/chrome</span></span><br><span class=\"line\">    textbox.setSelectionRange(startIndex, stopIndex);</span><br><span class=\"line\">    textbox.focus();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"具体代码（最终版，兼容双端）\"><a href=\"#具体代码（最终版，兼容双端）\" class=\"headerlink\" title=\"具体代码（最终版，兼容双端）\"></a>具体代码（最终版，兼容双端）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> urlLink = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"urlCopy\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">this</span>.selectText(urlLink, <span class=\"number\">0</span>, url.length);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.execCommand(<span class=\"string\">\"copy\"</span>), <span class=\"string\">\"execCommand\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.execCommand(<span class=\"string\">\"Copy\"</span>);</span><br><span class=\"line\">urlLink.blur();</span><br></pre></td></tr></table></figure>\n\n<hr>\n<hr>\n<h2 id=\"使用-react-copy-to-clipboard-插件实现\"><a href=\"#使用-react-copy-to-clipboard-插件实现\" class=\"headerlink\" title=\"使用 react-copy-to-clipboard 插件实现\"></a>使用 react-copy-to-clipboard 插件实现</h2><p>文档地址： <a href=\"https://github.com/nkbt/react-copy-to-clipboard/\" target=\"_blank\" rel=\"noopener\">https://github.com/nkbt/react-copy-to-clipboard/</a></p>\n<p>具体代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; CopyToClipboard &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-copy-to-clipboard\"</span>;</span><br><span class=\"line\">&lt;CopyToClipboard</span><br><span class=\"line\">  text=&#123;<span class=\"keyword\">this</span>.state.value&#125;</span><br><span class=\"line\">  onCopy=&#123;() =&gt; <span class=\"keyword\">this</span>.setState(&#123; <span class=\"attr\">copied</span>: <span class=\"literal\">true</span> &#125;)&#125;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &lt;span&gt;Copy to clipboard <span class=\"keyword\">with</span> span&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>CopyToClipboard&gt;;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用document-execCommand-quot-Copy-quot-来实现把复制的内容复制到粘贴板\"><a href=\"#使用document-execCommand-quot-Copy-quot-来实现把复制的内容复制到粘贴板\" class=\"headerlink\" title=\"使用document.execCommand(&quot;Copy&quot;);来实现把复制的内容复制到粘贴板\"></a>使用<code>document.execCommand(&quot;Copy&quot;);</code>来实现把复制的内容复制到粘贴板</h2><hr>\n<h3 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h3><ol>\n<li>创建 input 框，value 值为需要复制的内容，设置 readonly=”readonly”禁止唤起键盘</li>\n<li>使用 getElementById 获取 input 框</li>\n<li>调用.select()方法选中 input 框的内容（ios 中.select 方法无效）</li>\n<li>最后调用 document.execCommand(“Copy”) 实现复制</li>\n</ol>\n<hr>\n<h3 id=\"具体代码（最初版）\"><a href=\"#具体代码（最初版）\" class=\"headerlink\" title=\"具体代码（最初版）\"></a>具体代码（最初版）</h3><p>html:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">value</span>=<span class=\"string\">\"copy 的内容\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">id</span>=<span class=\"string\">\"copy\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">readonly</span>=<span class=\"string\">\"readonly\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">style</span>=<span class=\"string\">\"opacity: 0; position: absolute\"</span></span></span><br><span class=\"line\"><span class=\"tag\">/&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>js（只适合安卓端）:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> urlLink = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"copy\"</span>);</span><br><span class=\"line\">urlLink.select();</span><br><span class=\"line\"><span class=\"built_in\">document</span>.execCommand(<span class=\"string\">\"copy\"</span>);</span><br><span class=\"line\">message.success(<span class=\"string\">\"分享链接已复制成功！\"</span>, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"遇到的问题及解决方案\"><a href=\"#遇到的问题及解决方案\" class=\"headerlink\" title=\"遇到的问题及解决方案\"></a>遇到的问题及解决方案</h3><ol>\n<li><p>如果不想显示 input 框，可以将 input 框的 opacity 属性设置为 0，在使用绝对定位使其脱离文档流。注意，<strong>不能将 input 框的 display 属性设置为 none 或将 visibility 设置为 hidden 或设置 disabled，这会导致复制失败</strong></p>\n</li>\n<li><p>ie 之外的浏览器 document.execCommand(“copy”);这个必须在<strong>由用户操作触发的点击事件线程中执行</strong>，在 axios 异步的回调函数中执行是不允许的。解决的方案是使用 async 和 await，将异步的操作变为同步即可</p>\n</li>\n<li><p>ios 中无法使用.select()方法选中文字，需要重写选中文字的方法</p>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">selectText = <span class=\"function\">(<span class=\"params\">textbox, startIndex, stopIndex</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (textbox.createTextRange) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//ie</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> range = textbox.createTextRange();</span><br><span class=\"line\">    range.collapse(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    range.moveStart(<span class=\"string\">\"character\"</span>, startIndex); <span class=\"comment\">//起始光标</span></span><br><span class=\"line\">    range.moveEnd(<span class=\"string\">\"character\"</span>, stopIndex - startIndex); <span class=\"comment\">//结束光标</span></span><br><span class=\"line\">    range.select(); <span class=\"comment\">//不兼容苹果</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//firefox/chrome</span></span><br><span class=\"line\">    textbox.setSelectionRange(startIndex, stopIndex);</span><br><span class=\"line\">    textbox.focus();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"具体代码（最终版，兼容双端）\"><a href=\"#具体代码（最终版，兼容双端）\" class=\"headerlink\" title=\"具体代码（最终版，兼容双端）\"></a>具体代码（最终版，兼容双端）</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> urlLink = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"urlCopy\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">this</span>.selectText(urlLink, <span class=\"number\">0</span>, url.length);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">document</span>.execCommand(<span class=\"string\">\"copy\"</span>), <span class=\"string\">\"execCommand\"</span>);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.execCommand(<span class=\"string\">\"Copy\"</span>);</span><br><span class=\"line\">urlLink.blur();</span><br></pre></td></tr></table></figure>\n\n<hr>\n<hr>\n<h2 id=\"使用-react-copy-to-clipboard-插件实现\"><a href=\"#使用-react-copy-to-clipboard-插件实现\" class=\"headerlink\" title=\"使用 react-copy-to-clipboard 插件实现\"></a>使用 react-copy-to-clipboard 插件实现</h2><p>文档地址： <a href=\"https://github.com/nkbt/react-copy-to-clipboard/\" target=\"_blank\" rel=\"noopener\">https://github.com/nkbt/react-copy-to-clipboard/</a></p>\n<p>具体代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; CopyToClipboard &#125; <span class=\"keyword\">from</span> <span class=\"string\">\"react-copy-to-clipboard\"</span>;</span><br><span class=\"line\">&lt;CopyToClipboard</span><br><span class=\"line\">  text=&#123;<span class=\"keyword\">this</span>.state.value&#125;</span><br><span class=\"line\">  onCopy=&#123;() =&gt; <span class=\"keyword\">this</span>.setState(&#123; <span class=\"attr\">copied</span>: <span class=\"literal\">true</span> &#125;)&#125;</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">  &lt;span&gt;Copy to clipboard <span class=\"keyword\">with</span> span&lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>CopyToClipboard&gt;;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"margin折叠","date":"2019-07-12T02:48:33.000Z","_content":"\n## 什么是 margin 折叠\n\n在 CSS 中，两个或多个毗邻的普通流中的盒子（可能是父子元素，也可能是兄弟元素）在垂直方向上的外边距会发生叠加，这种形成的外边距称之为外边距叠加。\n\n- 父子间：\n  ![marginPc](/../image/marginPc.png \"margin折叠（父子元素）图\")\n\n- 兄弟间：\n  ![marginB](/../image/marginB.png \"margin折叠（兄弟元素）图\")、\n\n---\n\n## 什么时候发生 margin 折叠\n\n- 没有被 padding、border、clear 和 line box 分隔开\n- 属于同一个 BFC（块级格式化上下文 ）\n- 垂直方向\n- 属于普通流\n\n---\n\n## 如何形成一个 BFC\n\n1、float 的值不是 none。（float:left 或者 float:right）\n\n2、position 的值不是 static 或者 relative。（position:absolute 或者 position:fixed）\n\n3、display 的值是 inline-block、table-cell、flex、table-caption 或者 inline-flex\n\n4、overflow 的值不是 visible（overflow:hidden、overflow:scroll）\n\n5、父元素与正常文件流的子元素（非浮动子元素）自动形成一个 BFC\n\n---\n\n## 解决方案\n\n- 父子间\n\n  父元素设置以下属性中的一种：\n\n  ```css\n  /* padding-top: 1px; */\n  /* overflow: hidden; */\n  /* border-top: 1px solid red; */\n  /* display: inline-block; */\n  /* display: table-cell; */\n  ```\n\n- 兄弟间\n  - 推荐使用 padding 来代替 margin 使用\n  - 将兄弟元素分别作为子元素放在块级元素内，然后将其父级元素的渲染规则该为 BFC\n\n---\n","source":"_posts/margin折叠.md","raw":"---\ntitle: margin折叠\ndate: 2019-07-12 10:48:33\ntags:\n---\n\n## 什么是 margin 折叠\n\n在 CSS 中，两个或多个毗邻的普通流中的盒子（可能是父子元素，也可能是兄弟元素）在垂直方向上的外边距会发生叠加，这种形成的外边距称之为外边距叠加。\n\n- 父子间：\n  ![marginPc](/../image/marginPc.png \"margin折叠（父子元素）图\")\n\n- 兄弟间：\n  ![marginB](/../image/marginB.png \"margin折叠（兄弟元素）图\")、\n\n---\n\n## 什么时候发生 margin 折叠\n\n- 没有被 padding、border、clear 和 line box 分隔开\n- 属于同一个 BFC（块级格式化上下文 ）\n- 垂直方向\n- 属于普通流\n\n---\n\n## 如何形成一个 BFC\n\n1、float 的值不是 none。（float:left 或者 float:right）\n\n2、position 的值不是 static 或者 relative。（position:absolute 或者 position:fixed）\n\n3、display 的值是 inline-block、table-cell、flex、table-caption 或者 inline-flex\n\n4、overflow 的值不是 visible（overflow:hidden、overflow:scroll）\n\n5、父元素与正常文件流的子元素（非浮动子元素）自动形成一个 BFC\n\n---\n\n## 解决方案\n\n- 父子间\n\n  父元素设置以下属性中的一种：\n\n  ```css\n  /* padding-top: 1px; */\n  /* overflow: hidden; */\n  /* border-top: 1px solid red; */\n  /* display: inline-block; */\n  /* display: table-cell; */\n  ```\n\n- 兄弟间\n  - 推荐使用 padding 来代替 margin 使用\n  - 将兄弟元素分别作为子元素放在块级元素内，然后将其父级元素的渲染规则该为 BFC\n\n---\n","slug":"margin折叠","published":1,"updated":"2019-07-12T03:45:38.538Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy9uwfah0002jctstq553wqp","content":"<h2 id=\"什么是-margin-折叠\"><a href=\"#什么是-margin-折叠\" class=\"headerlink\" title=\"什么是 margin 折叠\"></a>什么是 margin 折叠</h2><p>在 CSS 中，两个或多个毗邻的普通流中的盒子（可能是父子元素，也可能是兄弟元素）在垂直方向上的外边距会发生叠加，这种形成的外边距称之为外边距叠加。</p>\n<ul>\n<li><p>父子间：<br><img src=\"/../image/marginPc.png\" alt=\"marginPc\" title=\"margin折叠（父子元素）图\"></p>\n</li>\n<li><p>兄弟间：<br><img src=\"/../image/marginB.png\" alt=\"marginB\" title=\"margin折叠（兄弟元素）图\">、</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"什么时候发生-margin-折叠\"><a href=\"#什么时候发生-margin-折叠\" class=\"headerlink\" title=\"什么时候发生 margin 折叠\"></a>什么时候发生 margin 折叠</h2><ul>\n<li>没有被 padding、border、clear 和 line box 分隔开</li>\n<li>属于同一个 BFC（块级格式化上下文 ）</li>\n<li>垂直方向</li>\n<li>属于普通流</li>\n</ul>\n<hr>\n<h2 id=\"如何形成一个-BFC\"><a href=\"#如何形成一个-BFC\" class=\"headerlink\" title=\"如何形成一个 BFC\"></a>如何形成一个 BFC</h2><p>1、float 的值不是 none。（float:left 或者 float:right）</p>\n<p>2、position 的值不是 static 或者 relative。（position:absolute 或者 position:fixed）</p>\n<p>3、display 的值是 inline-block、table-cell、flex、table-caption 或者 inline-flex</p>\n<p>4、overflow 的值不是 visible（overflow:hidden、overflow:scroll）</p>\n<p>5、父元素与正常文件流的子元素（非浮动子元素）自动形成一个 BFC</p>\n<hr>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><ul>\n<li><p>父子间</p>\n<p>父元素设置以下属性中的一种：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* padding-top: 1px; */</span></span><br><span class=\"line\"><span class=\"comment\">/* overflow: hidden; */</span></span><br><span class=\"line\"><span class=\"comment\">/* border-top: 1px solid red; */</span></span><br><span class=\"line\"><span class=\"comment\">/* display: inline-block; */</span></span><br><span class=\"line\"><span class=\"comment\">/* display: table-cell; */</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>兄弟间</p>\n<ul>\n<li>推荐使用 padding 来代替 margin 使用</li>\n<li>将兄弟元素分别作为子元素放在块级元素内，然后将其父级元素的渲染规则该为 BFC</li>\n</ul>\n</li>\n</ul>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是-margin-折叠\"><a href=\"#什么是-margin-折叠\" class=\"headerlink\" title=\"什么是 margin 折叠\"></a>什么是 margin 折叠</h2><p>在 CSS 中，两个或多个毗邻的普通流中的盒子（可能是父子元素，也可能是兄弟元素）在垂直方向上的外边距会发生叠加，这种形成的外边距称之为外边距叠加。</p>\n<ul>\n<li><p>父子间：<br><img src=\"/../image/marginPc.png\" alt=\"marginPc\" title=\"margin折叠（父子元素）图\"></p>\n</li>\n<li><p>兄弟间：<br><img src=\"/../image/marginB.png\" alt=\"marginB\" title=\"margin折叠（兄弟元素）图\">、</p>\n</li>\n</ul>\n<hr>\n<h2 id=\"什么时候发生-margin-折叠\"><a href=\"#什么时候发生-margin-折叠\" class=\"headerlink\" title=\"什么时候发生 margin 折叠\"></a>什么时候发生 margin 折叠</h2><ul>\n<li>没有被 padding、border、clear 和 line box 分隔开</li>\n<li>属于同一个 BFC（块级格式化上下文 ）</li>\n<li>垂直方向</li>\n<li>属于普通流</li>\n</ul>\n<hr>\n<h2 id=\"如何形成一个-BFC\"><a href=\"#如何形成一个-BFC\" class=\"headerlink\" title=\"如何形成一个 BFC\"></a>如何形成一个 BFC</h2><p>1、float 的值不是 none。（float:left 或者 float:right）</p>\n<p>2、position 的值不是 static 或者 relative。（position:absolute 或者 position:fixed）</p>\n<p>3、display 的值是 inline-block、table-cell、flex、table-caption 或者 inline-flex</p>\n<p>4、overflow 的值不是 visible（overflow:hidden、overflow:scroll）</p>\n<p>5、父元素与正常文件流的子元素（非浮动子元素）自动形成一个 BFC</p>\n<hr>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><ul>\n<li><p>父子间</p>\n<p>父元素设置以下属性中的一种：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* padding-top: 1px; */</span></span><br><span class=\"line\"><span class=\"comment\">/* overflow: hidden; */</span></span><br><span class=\"line\"><span class=\"comment\">/* border-top: 1px solid red; */</span></span><br><span class=\"line\"><span class=\"comment\">/* display: inline-block; */</span></span><br><span class=\"line\"><span class=\"comment\">/* display: table-cell; */</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>兄弟间</p>\n<ul>\n<li>推荐使用 padding 来代替 margin 使用</li>\n<li>将兄弟元素分别作为子元素放在块级元素内，然后将其父级元素的渲染规则该为 BFC</li>\n</ul>\n</li>\n</ul>\n<hr>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2019-06-20T06:16:15.656Z","updated":"2019-06-20T03:49:52.535Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy9uwfaj0003jctsamuvzl53","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"移动端踩过的坑","date":"2019-06-19T10:29:31.000Z","_content":"\n## IOS\n\n1. new Date 中指定的字符串的格式为 new Date(\"2018/04/27 11:11\")，其余格式需转化，例`new Date(\"2018-04-27 11:11\").replace(/-/g, \"/\")`\n\n2. Safari 浏览器中的弹性滑动属性-webkit-overflow-scrolling: touch 会导致 z-index 属性失效，解决的方法是通过设置`transform: traslateZ(1px)`，1px 中的 1 用来代表层级\n","source":"_posts/移动端兼容.md","raw":"---\ntitle: 移动端踩过的坑\ndate: 2019-06-19 18:29:31\ntags:\n---\n\n## IOS\n\n1. new Date 中指定的字符串的格式为 new Date(\"2018/04/27 11:11\")，其余格式需转化，例`new Date(\"2018-04-27 11:11\").replace(/-/g, \"/\")`\n\n2. Safari 浏览器中的弹性滑动属性-webkit-overflow-scrolling: touch 会导致 z-index 属性失效，解决的方法是通过设置`transform: traslateZ(1px)`，1px 中的 1 用来代表层级\n","slug":"移动端兼容","published":1,"updated":"2019-06-19T10:37:31.917Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy9uwfam0004jcts0jtmt22y","content":"<h2 id=\"IOS\"><a href=\"#IOS\" class=\"headerlink\" title=\"IOS\"></a>IOS</h2><ol>\n<li><p>new Date 中指定的字符串的格式为 new Date(“2018/04/27 11:11”)，其余格式需转化，例<code>new Date(&quot;2018-04-27 11:11&quot;).replace(/-/g, &quot;/&quot;)</code></p>\n</li>\n<li><p>Safari 浏览器中的弹性滑动属性-webkit-overflow-scrolling: touch 会导致 z-index 属性失效，解决的方法是通过设置<code>transform: traslateZ(1px)</code>，1px 中的 1 用来代表层级</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"IOS\"><a href=\"#IOS\" class=\"headerlink\" title=\"IOS\"></a>IOS</h2><ol>\n<li><p>new Date 中指定的字符串的格式为 new Date(“2018/04/27 11:11”)，其余格式需转化，例<code>new Date(&quot;2018-04-27 11:11&quot;).replace(/-/g, &quot;/&quot;)</code></p>\n</li>\n<li><p>Safari 浏览器中的弹性滑动属性-webkit-overflow-scrolling: touch 会导致 z-index 属性失效，解决的方法是通过设置<code>transform: traslateZ(1px)</code>，1px 中的 1 用来代表层级</p>\n</li>\n</ol>\n"},{"title":"下载文件到本地","date":"2019-06-19T10:29:31.000Z","_content":"\n## 一、HTML5 原生 download 属性\n\n实现方法：`<a href=\"large.jpg\" download>下载</a>`\n缺点：\n\n- 兼容差，目前只兼容了 Chrome\n- 文件需要是同源的，跨域资源会使 download 属性失效\n\n---\n\n## 二、使用 Blob 实现文件下载\n\n**接口请求设置`responseType: blob`来使得返参为 blob 类型**\n实现方法：\n\n```javascript\ndownload = (content, filename) => {\n  const eleLink = document.createElement(\"a\");\n  eleLink.download = filename; // 文件名\n  eleLink.style.display = \"none\";\n  var blob = new Blob([content]); // Blob二进制转换\n  eleLink.href = URL.createObjectURL(blob); // 二进制路径转换\n  // 触发点击\n  document.body.appendChild(eleLink);\n  eleLink.click();\n  // 然后移除\n  document.body.removeChild(eleLink);\n};\n```\n\n## 三、生成截图并保存\n\n1.主要使用 html2canvas 库和 canvas2img 库。\nhtml2canvas(可通过 npm 安装):\n\n- 文档地址：<http://html2canvas.hertzen.com/>\n- github 地址：<https://github.com/niklasvh/html2canvas/>\n\ncanvas2img(直接 copy 源码至项目):\n\n- github 地址：<https://github.com/hongru/canvas2image/>\n\n  2.使用方法\n\n```javascript\nhtml2canvas(document.getElementById(\"view\"), {\n  // 这里是相应的配置，具体配置参考文档\n  useCORS: true // 是否支持跨域\n  scrollY: 0, // 出现偏移，且脱离文档流时使用\n}).then(canvas => {\n  // canvas参数即为canvas\n  const img = Canvas2Image.convertToImage(canvas);\n\n  // 下载，兼容性不好，只支持Chrome\n  document.body.appendChild(img);\n\n  var a = document.createElement(\"a\");\n  // 创建一个单击事件\n  var event = new MouseEvent(\"click\");\n\n  // 将a的download属性设置为想要下载的图片名称\n  a.download = \"截图\";\n  a.href = img.src; //将img的src值设置为a.href属性，img.src为base64编码值\n\n  // 触发a的单击事件\n  a.dispatchEvent(event);\n\n  // width: 300,\n  // height: 300,\n});\n```\n\n**注意：**\n如果出现截图不完整，偏移等情况，这是由于定位使其脱离了文档流，可通过设置 scrollY：0 解决\n","source":"_posts/下载文件.md","raw":"---\ntitle: 下载文件到本地\ndate: 2019-06-19 18:29:31\ntags:\n---\n\n## 一、HTML5 原生 download 属性\n\n实现方法：`<a href=\"large.jpg\" download>下载</a>`\n缺点：\n\n- 兼容差，目前只兼容了 Chrome\n- 文件需要是同源的，跨域资源会使 download 属性失效\n\n---\n\n## 二、使用 Blob 实现文件下载\n\n**接口请求设置`responseType: blob`来使得返参为 blob 类型**\n实现方法：\n\n```javascript\ndownload = (content, filename) => {\n  const eleLink = document.createElement(\"a\");\n  eleLink.download = filename; // 文件名\n  eleLink.style.display = \"none\";\n  var blob = new Blob([content]); // Blob二进制转换\n  eleLink.href = URL.createObjectURL(blob); // 二进制路径转换\n  // 触发点击\n  document.body.appendChild(eleLink);\n  eleLink.click();\n  // 然后移除\n  document.body.removeChild(eleLink);\n};\n```\n\n## 三、生成截图并保存\n\n1.主要使用 html2canvas 库和 canvas2img 库。\nhtml2canvas(可通过 npm 安装):\n\n- 文档地址：<http://html2canvas.hertzen.com/>\n- github 地址：<https://github.com/niklasvh/html2canvas/>\n\ncanvas2img(直接 copy 源码至项目):\n\n- github 地址：<https://github.com/hongru/canvas2image/>\n\n  2.使用方法\n\n```javascript\nhtml2canvas(document.getElementById(\"view\"), {\n  // 这里是相应的配置，具体配置参考文档\n  useCORS: true // 是否支持跨域\n  scrollY: 0, // 出现偏移，且脱离文档流时使用\n}).then(canvas => {\n  // canvas参数即为canvas\n  const img = Canvas2Image.convertToImage(canvas);\n\n  // 下载，兼容性不好，只支持Chrome\n  document.body.appendChild(img);\n\n  var a = document.createElement(\"a\");\n  // 创建一个单击事件\n  var event = new MouseEvent(\"click\");\n\n  // 将a的download属性设置为想要下载的图片名称\n  a.download = \"截图\";\n  a.href = img.src; //将img的src值设置为a.href属性，img.src为base64编码值\n\n  // 触发a的单击事件\n  a.dispatchEvent(event);\n\n  // width: 300,\n  // height: 300,\n});\n```\n\n**注意：**\n如果出现截图不完整，偏移等情况，这是由于定位使其脱离了文档流，可通过设置 scrollY：0 解决\n","slug":"下载文件","published":1,"updated":"2019-07-19T07:06:19.162Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy9uwfao0005jcts4q3yylo2","content":"<h2 id=\"一、HTML5-原生-download-属性\"><a href=\"#一、HTML5-原生-download-属性\" class=\"headerlink\" title=\"一、HTML5 原生 download 属性\"></a>一、HTML5 原生 download 属性</h2><p>实现方法：<code>&lt;a href=&quot;large.jpg&quot; download&gt;下载&lt;/a&gt;</code><br>缺点：</p>\n<ul>\n<li>兼容差，目前只兼容了 Chrome</li>\n<li>文件需要是同源的，跨域资源会使 download 属性失效</li>\n</ul>\n<hr>\n<h2 id=\"二、使用-Blob-实现文件下载\"><a href=\"#二、使用-Blob-实现文件下载\" class=\"headerlink\" title=\"二、使用 Blob 实现文件下载\"></a>二、使用 Blob 实现文件下载</h2><p><strong>接口请求设置<code>responseType: blob</code>来使得返参为 blob 类型</strong><br>实现方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">download = <span class=\"function\">(<span class=\"params\">content, filename</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> eleLink = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">  eleLink.download = filename; <span class=\"comment\">// 文件名</span></span><br><span class=\"line\">  eleLink.style.display = <span class=\"string\">\"none\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> Blob([content]); <span class=\"comment\">// Blob二进制转换</span></span><br><span class=\"line\">  eleLink.href = URL.createObjectURL(blob); <span class=\"comment\">// 二进制路径转换</span></span><br><span class=\"line\">  <span class=\"comment\">// 触发点击</span></span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(eleLink);</span><br><span class=\"line\">  eleLink.click();</span><br><span class=\"line\">  <span class=\"comment\">// 然后移除</span></span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.removeChild(eleLink);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、生成截图并保存\"><a href=\"#三、生成截图并保存\" class=\"headerlink\" title=\"三、生成截图并保存\"></a>三、生成截图并保存</h2><p>1.主要使用 html2canvas 库和 canvas2img 库。<br>html2canvas(可通过 npm 安装):</p>\n<ul>\n<li>文档地址：<a href=\"http://html2canvas.hertzen.com/\" target=\"_blank\" rel=\"noopener\">http://html2canvas.hertzen.com/</a></li>\n<li>github 地址：<a href=\"https://github.com/niklasvh/html2canvas/\" target=\"_blank\" rel=\"noopener\">https://github.com/niklasvh/html2canvas/</a></li>\n</ul>\n<p>canvas2img(直接 copy 源码至项目):</p>\n<ul>\n<li><p>github 地址：<a href=\"https://github.com/hongru/canvas2image/\" target=\"_blank\" rel=\"noopener\">https://github.com/hongru/canvas2image/</a></p>\n<p>2.使用方法</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html2canvas(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"view\"</span>), &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这里是相应的配置，具体配置参考文档</span></span><br><span class=\"line\">  useCORS: <span class=\"literal\">true</span> <span class=\"comment\">// 是否支持跨域</span></span><br><span class=\"line\">  scrollY: <span class=\"number\">0</span>, <span class=\"comment\">// 出现偏移，且脱离文档流时使用</span></span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"params\">canvas</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// canvas参数即为canvas</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> img = Canvas2Image.convertToImage(canvas);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 下载，兼容性不好，只支持Chrome</span></span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(img);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 创建一个单击事件</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> event = <span class=\"keyword\">new</span> MouseEvent(<span class=\"string\">\"click\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 将a的download属性设置为想要下载的图片名称</span></span><br><span class=\"line\">  a.download = <span class=\"string\">\"截图\"</span>;</span><br><span class=\"line\">  a.href = img.src; <span class=\"comment\">//将img的src值设置为a.href属性，img.src为base64编码值</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 触发a的单击事件</span></span><br><span class=\"line\">  a.dispatchEvent(event);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// width: 300,</span></span><br><span class=\"line\">  <span class=\"comment\">// height: 300,</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong><br>如果出现截图不完整，偏移等情况，这是由于定位使其脱离了文档流，可通过设置 scrollY：0 解决</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、HTML5-原生-download-属性\"><a href=\"#一、HTML5-原生-download-属性\" class=\"headerlink\" title=\"一、HTML5 原生 download 属性\"></a>一、HTML5 原生 download 属性</h2><p>实现方法：<code>&lt;a href=&quot;large.jpg&quot; download&gt;下载&lt;/a&gt;</code><br>缺点：</p>\n<ul>\n<li>兼容差，目前只兼容了 Chrome</li>\n<li>文件需要是同源的，跨域资源会使 download 属性失效</li>\n</ul>\n<hr>\n<h2 id=\"二、使用-Blob-实现文件下载\"><a href=\"#二、使用-Blob-实现文件下载\" class=\"headerlink\" title=\"二、使用 Blob 实现文件下载\"></a>二、使用 Blob 实现文件下载</h2><p><strong>接口请求设置<code>responseType: blob</code>来使得返参为 blob 类型</strong><br>实现方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">download = <span class=\"function\">(<span class=\"params\">content, filename</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> eleLink = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">  eleLink.download = filename; <span class=\"comment\">// 文件名</span></span><br><span class=\"line\">  eleLink.style.display = <span class=\"string\">\"none\"</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> blob = <span class=\"keyword\">new</span> Blob([content]); <span class=\"comment\">// Blob二进制转换</span></span><br><span class=\"line\">  eleLink.href = URL.createObjectURL(blob); <span class=\"comment\">// 二进制路径转换</span></span><br><span class=\"line\">  <span class=\"comment\">// 触发点击</span></span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(eleLink);</span><br><span class=\"line\">  eleLink.click();</span><br><span class=\"line\">  <span class=\"comment\">// 然后移除</span></span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.removeChild(eleLink);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"三、生成截图并保存\"><a href=\"#三、生成截图并保存\" class=\"headerlink\" title=\"三、生成截图并保存\"></a>三、生成截图并保存</h2><p>1.主要使用 html2canvas 库和 canvas2img 库。<br>html2canvas(可通过 npm 安装):</p>\n<ul>\n<li>文档地址：<a href=\"http://html2canvas.hertzen.com/\" target=\"_blank\" rel=\"noopener\">http://html2canvas.hertzen.com/</a></li>\n<li>github 地址：<a href=\"https://github.com/niklasvh/html2canvas/\" target=\"_blank\" rel=\"noopener\">https://github.com/niklasvh/html2canvas/</a></li>\n</ul>\n<p>canvas2img(直接 copy 源码至项目):</p>\n<ul>\n<li><p>github 地址：<a href=\"https://github.com/hongru/canvas2image/\" target=\"_blank\" rel=\"noopener\">https://github.com/hongru/canvas2image/</a></p>\n<p>2.使用方法</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">html2canvas(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"view\"</span>), &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这里是相应的配置，具体配置参考文档</span></span><br><span class=\"line\">  useCORS: <span class=\"literal\">true</span> <span class=\"comment\">// 是否支持跨域</span></span><br><span class=\"line\">  scrollY: <span class=\"number\">0</span>, <span class=\"comment\">// 出现偏移，且脱离文档流时使用</span></span><br><span class=\"line\">&#125;).then(<span class=\"function\"><span class=\"params\">canvas</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// canvas参数即为canvas</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> img = Canvas2Image.convertToImage(canvas);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 下载，兼容性不好，只支持Chrome</span></span><br><span class=\"line\">  <span class=\"built_in\">document</span>.body.appendChild(img);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 创建一个单击事件</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> event = <span class=\"keyword\">new</span> MouseEvent(<span class=\"string\">\"click\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 将a的download属性设置为想要下载的图片名称</span></span><br><span class=\"line\">  a.download = <span class=\"string\">\"截图\"</span>;</span><br><span class=\"line\">  a.href = img.src; <span class=\"comment\">//将img的src值设置为a.href属性，img.src为base64编码值</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 触发a的单击事件</span></span><br><span class=\"line\">  a.dispatchEvent(event);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// width: 300,</span></span><br><span class=\"line\">  <span class=\"comment\">// height: 300,</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong><br>如果出现截图不完整，偏移等情况，这是由于定位使其脱离了文档流，可通过设置 scrollY：0 解决</p>\n"},{"title":"ts学习笔记","date":"2019-06-26T02:06:42.000Z","_content":"\n## 数据类型\n\n1. 类型推论。\n\n   ```javascript\n   let myFavoriteNumber = \"seven\";\n   ```\n\n   等价于\n\n   ```javascript\n   let myFavoriteNumber: string = \"seven\";\n   ```\n\n   ts 会在没有明确的指定类型的时候推测出一个类型。但是，**如果定义的时候没有赋值，不管之后 有没有赋值，都会被推断成 any 类型而完全不被类型检查**。\n\n   ```javascript\n   let myFavoriteNumber;\n   myFavoriteNumber = \"seven\";\n   ```\n\n   等价于\n\n   ```javascript\n   let myFavoriteNumber: any;\n   myFavoriteNumber = \"seven\";\n   ```\n\n2. 接口（interface）\n\n   - 自定义属性\n\n     ```typescript\n     interface Person {\n       name: string;\n       age?: number;\n       [x: string]: string;\n     }\n\n     let tom: Person = {\n       name: \"Tom\",\n       age: 25,\n       gender: \"male\"\n     };\n     ```\n\n     **一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集**，上面代码中定义了任意属性，而 age 的值却是 number，number 不是 string 的子属性，所以编译会报错\n","source":"_posts/ts学习笔记.md","raw":"---\ntitle: ts学习笔记\ndate: 2019-06-26 10:06:42\ntags:\n---\n\n## 数据类型\n\n1. 类型推论。\n\n   ```javascript\n   let myFavoriteNumber = \"seven\";\n   ```\n\n   等价于\n\n   ```javascript\n   let myFavoriteNumber: string = \"seven\";\n   ```\n\n   ts 会在没有明确的指定类型的时候推测出一个类型。但是，**如果定义的时候没有赋值，不管之后 有没有赋值，都会被推断成 any 类型而完全不被类型检查**。\n\n   ```javascript\n   let myFavoriteNumber;\n   myFavoriteNumber = \"seven\";\n   ```\n\n   等价于\n\n   ```javascript\n   let myFavoriteNumber: any;\n   myFavoriteNumber = \"seven\";\n   ```\n\n2. 接口（interface）\n\n   - 自定义属性\n\n     ```typescript\n     interface Person {\n       name: string;\n       age?: number;\n       [x: string]: string;\n     }\n\n     let tom: Person = {\n       name: \"Tom\",\n       age: 25,\n       gender: \"male\"\n     };\n     ```\n\n     **一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集**，上面代码中定义了任意属性，而 age 的值却是 number，number 不是 string 的子属性，所以编译会报错\n","slug":"ts学习笔记","published":1,"updated":"2019-06-26T11:26:06.822Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy9uwfas0006jcts8j5rvhu8","content":"<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><ol>\n<li><p>类型推论。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myFavoriteNumber = <span class=\"string\">\"seven\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>等价于</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myFavoriteNumber: string = <span class=\"string\">\"seven\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>ts 会在没有明确的指定类型的时候推测出一个类型。但是，<strong>如果定义的时候没有赋值，不管之后 有没有赋值，都会被推断成 any 类型而完全不被类型检查</strong>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myFavoriteNumber;</span><br><span class=\"line\">myFavoriteNumber = <span class=\"string\">\"seven\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>等价于</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myFavoriteNumber: any;</span><br><span class=\"line\">myFavoriteNumber = <span class=\"string\">\"seven\"</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>接口（interface）</p>\n<ul>\n<li><p>自定义属性</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> Person &#123;</span><br><span class=\"line\">  name: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  age?: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  [x: <span class=\"built_in\">string</span>]: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> tom: Person = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"Tom\"</span>,</span><br><span class=\"line\">  age: <span class=\"number\">25</span>,</span><br><span class=\"line\">  gender: <span class=\"string\">\"male\"</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集</strong>，上面代码中定义了任意属性，而 age 的值却是 number，number 不是 string 的子属性，所以编译会报错</p>\n</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h2><ol>\n<li><p>类型推论。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myFavoriteNumber = <span class=\"string\">\"seven\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>等价于</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myFavoriteNumber: string = <span class=\"string\">\"seven\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>ts 会在没有明确的指定类型的时候推测出一个类型。但是，<strong>如果定义的时候没有赋值，不管之后 有没有赋值，都会被推断成 any 类型而完全不被类型检查</strong>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myFavoriteNumber;</span><br><span class=\"line\">myFavoriteNumber = <span class=\"string\">\"seven\"</span>;</span><br></pre></td></tr></table></figure>\n\n<p>等价于</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> myFavoriteNumber: any;</span><br><span class=\"line\">myFavoriteNumber = <span class=\"string\">\"seven\"</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>接口（interface）</p>\n<ul>\n<li><p>自定义属性</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> Person &#123;</span><br><span class=\"line\">  name: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  age?: <span class=\"built_in\">number</span>;</span><br><span class=\"line\">  [x: <span class=\"built_in\">string</span>]: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> tom: Person = &#123;</span><br><span class=\"line\">  name: <span class=\"string\">\"Tom\"</span>,</span><br><span class=\"line\">  age: <span class=\"number\">25</span>,</span><br><span class=\"line\">  gender: <span class=\"string\">\"male\"</span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>一旦定义了任意属性，那么确定属性和可选属性的类型都必须是它的类型的子集</strong>，上面代码中定义了任意属性，而 age 的值却是 number，number 不是 string 的子属性，所以编译会报错</p>\n</li>\n</ul>\n</li>\n</ol>\n"},{"title":"电商流程","date":"2019-06-20T03:50:21.000Z","_content":"\n## 一、普通订单状态\n\n1. 待付款\n2. 待发货\n3. 待收货\n4. 交易完成\n5. 交易关闭\n\n**注意：**\n\n1. 功能条目中的内容只在订单详情页展示，列表页不展示。\n\n2. 按钮条目是有顺序的，若未特殊说明，从上到下依次对应 ui 中从右往左。\n\n3. 联系客服这个按钮不在按钮列表显示，统一加在订单详情页面内容中。\n\n4. 状态流转是指该状态之后一步的状态。\n\n---\n\n### 待付款\n\n1. 功能\n\n   - 支付倒计时（默认 30 分钟）\n\n2. 按钮\n\n   - 立即支付（高亮）\n   - 修改地址（根据产品需求添加）\n   - 取消订单\n\n3. 状态流转\n\n   - 交易关闭（取消订单后流转）\n   - 待发货（支付成功后流转）\n\n4. 详情展示内容\n\n   - 用户地址信息\n   - 各种商品信息（图片，名称，规格，单价，数量）\n   - 商品总金额\n   - 优惠金额\n   - 积分抵扣金额\n   - 运费\n   - 订单实付金额\n   - 订单编号\n   - 下单时间\n   - 备注\n\n---\n\n### 待发货\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 批量退款（仅退款，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面不显示选择退款的方式）\n\n3. 状态流转\n\n   - 待收货（商家发货后流转）\n\n4. 详情展示内容\n\n   - 用户地址信息\n   - 各种商品信息（图片，名称，规格，单价，数量）\n   - 商品总金额\n   - 优惠金额\n   - 积分抵扣金额\n   - 运费\n   - 订单实付金额\n   - 订单编号\n   - 下单时间\n   - 支付时间\n   - 支付方式（可无）\n   - 备注\n\n---\n\n### 待收货\n\n1. 功能\n\n   - 自动确认收货倒计时（默认自发货时间起 10 天）（如客户未要求，默认不需要）\n\n2. 按钮\n\n   - 确认收货（高亮）\n   - 批量退款（分仅退款和退款退货，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面选择退款的方式）\n   - 查看物流\n   - 退款状态（该按钮只显示在各个商品上，并且该商品已申请退款，点击跳转对应的退款详情页）（状态有 审核中 / 待上传物流信息 / 退款成功 / 商家已驳回 / 已撤回）\n\n3. 状态流转\n\n   - 交易完成（确认收货后流转）\n\n4. 详情展示内容\n\n   - 用户地址信息\n   - 各种商品信息（图片，名称，规格，单价，数量）\n   - 商品总金额\n   - 优惠金额\n   - 积分抵扣金额\n   - 运费\n   - 订单实付金额\n   - 订单编号\n   - 下单时间\n   - 支付时间\n   - 支付方式（可无）\n   - 发货时间\n   - 备注\n\n---\n\n### 交易完成\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 立即评价（高亮）（根据产品需求是否展示）\n   - 查看物流\n   - 批量退款（分仅退款和退款退货，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面选择退款的方式）\n   - 退款状态（该按钮只显示在各个商品上，并且该商品已申请退款，点击跳转对应的退款详情页）（状态有 审核中 / 待上传物流信息 / 退款成功 / 商家已驳回 / 已撤回）\n\n3. 状态流转\n\n   - 无\n\n4. 详情展示内容\n\n   - 用户地址信息\n   - 各种商品信息（图片，名称，规格，单价，数量）\n   - 商品总金额\n   - 优惠金额\n   - 积分抵扣金额\n   - 运费\n   - 订单实付金额\n   - 订单编号\n   - 下单时间\n   - 支付时间\n   - 支付方式（可无）\n   - 发货时间\n   - 收货时间\n   - 备注\n\n---\n\n### 交易关闭\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 无\n\n3. 状态流转\n\n   - 无\n\n4. 详情展示内容\n\n   - 用户地址信息\n   - 各种商品信息（图片，名称，规格，单价，数量）\n   - 商品总金额\n   - 优惠金额\n   - 积分抵扣金额\n   - 运费\n   - 订单实付金额\n   - 订单编号\n   - 下单时间\n   - 备注\n\n   以下由上一状态决定是否显示\n\n   - 支付时间\n   - 支付方式（可无）\n   - 发货时间\n   - 收货时间\n\n---\n\n---\n\n## 二、退款订单状态（仅退款和退款退货）\n\n1. 审核中（**审核中有 2 种情况，第一种是用户提交申请后，第二种是用户上传物流信息后**）\n2. 待上传物流信息(**退款退货下显示，仅退款不显示**)\n3. 退款成功\n4. 商家已驳回(**商家可以在任意阶段驳回用户的申请**)\n5. 已撤回\n\n**注意：**\n\n1. 联系客服这个按钮不在按钮列表显示，统一加在退款详情页面内容中。\n\n2. 商家收到用户退货商品后，如要驳回，需自行联系用户，告知其退还货物订单号，前台页面不再展示相关订单信息。\n\n3. 订单列表需展示退款类型（退款退货/仅退款）\n\n---\n\n### 审核中\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 撤回申请\n\n3. 状态流转\n\n   - 待上传物流信息（用户提交退款申请后流转）\n   - 退款成功（商家退款后流转）\n   - 已驳回（商家驳回用户申请后流转）\n   - 已撤回（用户撤回申请后流转）\n\n4. 详情展示内容\n\n   - 退款商品信息（图片，名称，规格，单价，数量）\n   - 退款方式\n   - 退款金额\n   - 备注\n   - 退款单号\n   - 申请时间\n\n---\n\n### 待上传物流信息（退款退货显示）\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 上传物流\n   - 撤回申请\n\n3. 状态流转\n\n   - 审核中（用户上传物流信息后流转）\n   - 已撤回（用户撤回申请后流转）\n\n---\n\n### 退款成功\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 无\n\n3. 状态流转\n\n   - 无\n\n---\n\n### 商家已驳回\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 无\n\n3. 状态流转\n\n   - 无\n\n---\n\n### 已撤回\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 无\n\n3. 状态流转\n\n   - 无\n\n---\n\n---\n\n## 流程图\n\n![process](/../image/process.png \"流程图\")\n","source":"_posts/电商流程.md","raw":"---\ntitle: 电商流程\ndate: 2019-06-20 11:50:21\ntags:\n---\n\n## 一、普通订单状态\n\n1. 待付款\n2. 待发货\n3. 待收货\n4. 交易完成\n5. 交易关闭\n\n**注意：**\n\n1. 功能条目中的内容只在订单详情页展示，列表页不展示。\n\n2. 按钮条目是有顺序的，若未特殊说明，从上到下依次对应 ui 中从右往左。\n\n3. 联系客服这个按钮不在按钮列表显示，统一加在订单详情页面内容中。\n\n4. 状态流转是指该状态之后一步的状态。\n\n---\n\n### 待付款\n\n1. 功能\n\n   - 支付倒计时（默认 30 分钟）\n\n2. 按钮\n\n   - 立即支付（高亮）\n   - 修改地址（根据产品需求添加）\n   - 取消订单\n\n3. 状态流转\n\n   - 交易关闭（取消订单后流转）\n   - 待发货（支付成功后流转）\n\n4. 详情展示内容\n\n   - 用户地址信息\n   - 各种商品信息（图片，名称，规格，单价，数量）\n   - 商品总金额\n   - 优惠金额\n   - 积分抵扣金额\n   - 运费\n   - 订单实付金额\n   - 订单编号\n   - 下单时间\n   - 备注\n\n---\n\n### 待发货\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 批量退款（仅退款，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面不显示选择退款的方式）\n\n3. 状态流转\n\n   - 待收货（商家发货后流转）\n\n4. 详情展示内容\n\n   - 用户地址信息\n   - 各种商品信息（图片，名称，规格，单价，数量）\n   - 商品总金额\n   - 优惠金额\n   - 积分抵扣金额\n   - 运费\n   - 订单实付金额\n   - 订单编号\n   - 下单时间\n   - 支付时间\n   - 支付方式（可无）\n   - 备注\n\n---\n\n### 待收货\n\n1. 功能\n\n   - 自动确认收货倒计时（默认自发货时间起 10 天）（如客户未要求，默认不需要）\n\n2. 按钮\n\n   - 确认收货（高亮）\n   - 批量退款（分仅退款和退款退货，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面选择退款的方式）\n   - 查看物流\n   - 退款状态（该按钮只显示在各个商品上，并且该商品已申请退款，点击跳转对应的退款详情页）（状态有 审核中 / 待上传物流信息 / 退款成功 / 商家已驳回 / 已撤回）\n\n3. 状态流转\n\n   - 交易完成（确认收货后流转）\n\n4. 详情展示内容\n\n   - 用户地址信息\n   - 各种商品信息（图片，名称，规格，单价，数量）\n   - 商品总金额\n   - 优惠金额\n   - 积分抵扣金额\n   - 运费\n   - 订单实付金额\n   - 订单编号\n   - 下单时间\n   - 支付时间\n   - 支付方式（可无）\n   - 发货时间\n   - 备注\n\n---\n\n### 交易完成\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 立即评价（高亮）（根据产品需求是否展示）\n   - 查看物流\n   - 批量退款（分仅退款和退款退货，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面选择退款的方式）\n   - 退款状态（该按钮只显示在各个商品上，并且该商品已申请退款，点击跳转对应的退款详情页）（状态有 审核中 / 待上传物流信息 / 退款成功 / 商家已驳回 / 已撤回）\n\n3. 状态流转\n\n   - 无\n\n4. 详情展示内容\n\n   - 用户地址信息\n   - 各种商品信息（图片，名称，规格，单价，数量）\n   - 商品总金额\n   - 优惠金额\n   - 积分抵扣金额\n   - 运费\n   - 订单实付金额\n   - 订单编号\n   - 下单时间\n   - 支付时间\n   - 支付方式（可无）\n   - 发货时间\n   - 收货时间\n   - 备注\n\n---\n\n### 交易关闭\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 无\n\n3. 状态流转\n\n   - 无\n\n4. 详情展示内容\n\n   - 用户地址信息\n   - 各种商品信息（图片，名称，规格，单价，数量）\n   - 商品总金额\n   - 优惠金额\n   - 积分抵扣金额\n   - 运费\n   - 订单实付金额\n   - 订单编号\n   - 下单时间\n   - 备注\n\n   以下由上一状态决定是否显示\n\n   - 支付时间\n   - 支付方式（可无）\n   - 发货时间\n   - 收货时间\n\n---\n\n---\n\n## 二、退款订单状态（仅退款和退款退货）\n\n1. 审核中（**审核中有 2 种情况，第一种是用户提交申请后，第二种是用户上传物流信息后**）\n2. 待上传物流信息(**退款退货下显示，仅退款不显示**)\n3. 退款成功\n4. 商家已驳回(**商家可以在任意阶段驳回用户的申请**)\n5. 已撤回\n\n**注意：**\n\n1. 联系客服这个按钮不在按钮列表显示，统一加在退款详情页面内容中。\n\n2. 商家收到用户退货商品后，如要驳回，需自行联系用户，告知其退还货物订单号，前台页面不再展示相关订单信息。\n\n3. 订单列表需展示退款类型（退款退货/仅退款）\n\n---\n\n### 审核中\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 撤回申请\n\n3. 状态流转\n\n   - 待上传物流信息（用户提交退款申请后流转）\n   - 退款成功（商家退款后流转）\n   - 已驳回（商家驳回用户申请后流转）\n   - 已撤回（用户撤回申请后流转）\n\n4. 详情展示内容\n\n   - 退款商品信息（图片，名称，规格，单价，数量）\n   - 退款方式\n   - 退款金额\n   - 备注\n   - 退款单号\n   - 申请时间\n\n---\n\n### 待上传物流信息（退款退货显示）\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 上传物流\n   - 撤回申请\n\n3. 状态流转\n\n   - 审核中（用户上传物流信息后流转）\n   - 已撤回（用户撤回申请后流转）\n\n---\n\n### 退款成功\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 无\n\n3. 状态流转\n\n   - 无\n\n---\n\n### 商家已驳回\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 无\n\n3. 状态流转\n\n   - 无\n\n---\n\n### 已撤回\n\n1. 功能\n\n   - 无\n\n2. 按钮\n\n   - 无\n\n3. 状态流转\n\n   - 无\n\n---\n\n---\n\n## 流程图\n\n![process](/../image/process.png \"流程图\")\n","slug":"电商流程","published":1,"updated":"2019-07-12T11:51:47.826Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy9uwfau0007jctsuxoereto","content":"<h2 id=\"一、普通订单状态\"><a href=\"#一、普通订单状态\" class=\"headerlink\" title=\"一、普通订单状态\"></a>一、普通订单状态</h2><ol>\n<li>待付款</li>\n<li>待发货</li>\n<li>待收货</li>\n<li>交易完成</li>\n<li>交易关闭</li>\n</ol>\n<p><strong>注意：</strong></p>\n<ol>\n<li><p>功能条目中的内容只在订单详情页展示，列表页不展示。</p>\n</li>\n<li><p>按钮条目是有顺序的，若未特殊说明，从上到下依次对应 ui 中从右往左。</p>\n</li>\n<li><p>联系客服这个按钮不在按钮列表显示，统一加在订单详情页面内容中。</p>\n</li>\n<li><p>状态流转是指该状态之后一步的状态。</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"待付款\"><a href=\"#待付款\" class=\"headerlink\" title=\"待付款\"></a>待付款</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>支付倒计时（默认 30 分钟）</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>立即支付（高亮）</li>\n<li>修改地址（根据产品需求添加）</li>\n<li>取消订单</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>交易关闭（取消订单后流转）</li>\n<li>待发货（支付成功后流转）</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>用户地址信息</li>\n<li>各种商品信息（图片，名称，规格，单价，数量）</li>\n<li>商品总金额</li>\n<li>优惠金额</li>\n<li>积分抵扣金额</li>\n<li>运费</li>\n<li>订单实付金额</li>\n<li>订单编号</li>\n<li>下单时间</li>\n<li>备注</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"待发货\"><a href=\"#待发货\" class=\"headerlink\" title=\"待发货\"></a>待发货</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>批量退款（仅退款，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面不显示选择退款的方式）</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>待收货（商家发货后流转）</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>用户地址信息</li>\n<li>各种商品信息（图片，名称，规格，单价，数量）</li>\n<li>商品总金额</li>\n<li>优惠金额</li>\n<li>积分抵扣金额</li>\n<li>运费</li>\n<li>订单实付金额</li>\n<li>订单编号</li>\n<li>下单时间</li>\n<li>支付时间</li>\n<li>支付方式（可无）</li>\n<li>备注</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"待收货\"><a href=\"#待收货\" class=\"headerlink\" title=\"待收货\"></a>待收货</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>自动确认收货倒计时（默认自发货时间起 10 天）（如客户未要求，默认不需要）</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>确认收货（高亮）</li>\n<li>批量退款（分仅退款和退款退货，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面选择退款的方式）</li>\n<li>查看物流</li>\n<li>退款状态（该按钮只显示在各个商品上，并且该商品已申请退款，点击跳转对应的退款详情页）（状态有 审核中 / 待上传物流信息 / 退款成功 / 商家已驳回 / 已撤回）</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>交易完成（确认收货后流转）</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>用户地址信息</li>\n<li>各种商品信息（图片，名称，规格，单价，数量）</li>\n<li>商品总金额</li>\n<li>优惠金额</li>\n<li>积分抵扣金额</li>\n<li>运费</li>\n<li>订单实付金额</li>\n<li>订单编号</li>\n<li>下单时间</li>\n<li>支付时间</li>\n<li>支付方式（可无）</li>\n<li>发货时间</li>\n<li>备注</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"交易完成\"><a href=\"#交易完成\" class=\"headerlink\" title=\"交易完成\"></a>交易完成</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>立即评价（高亮）（根据产品需求是否展示）</li>\n<li>查看物流</li>\n<li>批量退款（分仅退款和退款退货，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面选择退款的方式）</li>\n<li>退款状态（该按钮只显示在各个商品上，并且该商品已申请退款，点击跳转对应的退款详情页）（状态有 审核中 / 待上传物流信息 / 退款成功 / 商家已驳回 / 已撤回）</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>用户地址信息</li>\n<li>各种商品信息（图片，名称，规格，单价，数量）</li>\n<li>商品总金额</li>\n<li>优惠金额</li>\n<li>积分抵扣金额</li>\n<li>运费</li>\n<li>订单实付金额</li>\n<li>订单编号</li>\n<li>下单时间</li>\n<li>支付时间</li>\n<li>支付方式（可无）</li>\n<li>发货时间</li>\n<li>收货时间</li>\n<li>备注</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"交易关闭\"><a href=\"#交易关闭\" class=\"headerlink\" title=\"交易关闭\"></a>交易关闭</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>用户地址信息</li>\n<li>各种商品信息（图片，名称，规格，单价，数量）</li>\n<li>商品总金额</li>\n<li>优惠金额</li>\n<li>积分抵扣金额</li>\n<li>运费</li>\n<li>订单实付金额</li>\n<li>订单编号</li>\n<li>下单时间</li>\n<li>备注</li>\n</ul>\n<p>以下由上一状态决定是否显示</p>\n<ul>\n<li>支付时间</li>\n<li>支付方式（可无）</li>\n<li>发货时间</li>\n<li>收货时间</li>\n</ul>\n</li>\n</ol>\n<hr>\n<hr>\n<h2 id=\"二、退款订单状态（仅退款和退款退货）\"><a href=\"#二、退款订单状态（仅退款和退款退货）\" class=\"headerlink\" title=\"二、退款订单状态（仅退款和退款退货）\"></a>二、退款订单状态（仅退款和退款退货）</h2><ol>\n<li>审核中（<strong>审核中有 2 种情况，第一种是用户提交申请后，第二种是用户上传物流信息后</strong>）</li>\n<li>待上传物流信息(<strong>退款退货下显示，仅退款不显示</strong>)</li>\n<li>退款成功</li>\n<li>商家已驳回(<strong>商家可以在任意阶段驳回用户的申请</strong>)</li>\n<li>已撤回</li>\n</ol>\n<p><strong>注意：</strong></p>\n<ol>\n<li><p>联系客服这个按钮不在按钮列表显示，统一加在退款详情页面内容中。</p>\n</li>\n<li><p>商家收到用户退货商品后，如要驳回，需自行联系用户，告知其退还货物订单号，前台页面不再展示相关订单信息。</p>\n</li>\n<li><p>订单列表需展示退款类型（退款退货/仅退款）</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"审核中\"><a href=\"#审核中\" class=\"headerlink\" title=\"审核中\"></a>审核中</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>撤回申请</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>待上传物流信息（用户提交退款申请后流转）</li>\n<li>退款成功（商家退款后流转）</li>\n<li>已驳回（商家驳回用户申请后流转）</li>\n<li>已撤回（用户撤回申请后流转）</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>退款商品信息（图片，名称，规格，单价，数量）</li>\n<li>退款方式</li>\n<li>退款金额</li>\n<li>备注</li>\n<li>退款单号</li>\n<li>申请时间</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"待上传物流信息（退款退货显示）\"><a href=\"#待上传物流信息（退款退货显示）\" class=\"headerlink\" title=\"待上传物流信息（退款退货显示）\"></a>待上传物流信息（退款退货显示）</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>上传物流</li>\n<li>撤回申请</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>审核中（用户上传物流信息后流转）</li>\n<li>已撤回（用户撤回申请后流转）</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"退款成功\"><a href=\"#退款成功\" class=\"headerlink\" title=\"退款成功\"></a>退款成功</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"商家已驳回\"><a href=\"#商家已驳回\" class=\"headerlink\" title=\"商家已驳回\"></a>商家已驳回</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"已撤回\"><a href=\"#已撤回\" class=\"headerlink\" title=\"已撤回\"></a>已撤回</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n</ol>\n<hr>\n<hr>\n<h2 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h2><p><img src=\"/../image/process.png\" alt=\"process\" title=\"流程图\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、普通订单状态\"><a href=\"#一、普通订单状态\" class=\"headerlink\" title=\"一、普通订单状态\"></a>一、普通订单状态</h2><ol>\n<li>待付款</li>\n<li>待发货</li>\n<li>待收货</li>\n<li>交易完成</li>\n<li>交易关闭</li>\n</ol>\n<p><strong>注意：</strong></p>\n<ol>\n<li><p>功能条目中的内容只在订单详情页展示，列表页不展示。</p>\n</li>\n<li><p>按钮条目是有顺序的，若未特殊说明，从上到下依次对应 ui 中从右往左。</p>\n</li>\n<li><p>联系客服这个按钮不在按钮列表显示，统一加在订单详情页面内容中。</p>\n</li>\n<li><p>状态流转是指该状态之后一步的状态。</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"待付款\"><a href=\"#待付款\" class=\"headerlink\" title=\"待付款\"></a>待付款</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>支付倒计时（默认 30 分钟）</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>立即支付（高亮）</li>\n<li>修改地址（根据产品需求添加）</li>\n<li>取消订单</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>交易关闭（取消订单后流转）</li>\n<li>待发货（支付成功后流转）</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>用户地址信息</li>\n<li>各种商品信息（图片，名称，规格，单价，数量）</li>\n<li>商品总金额</li>\n<li>优惠金额</li>\n<li>积分抵扣金额</li>\n<li>运费</li>\n<li>订单实付金额</li>\n<li>订单编号</li>\n<li>下单时间</li>\n<li>备注</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"待发货\"><a href=\"#待发货\" class=\"headerlink\" title=\"待发货\"></a>待发货</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>批量退款（仅退款，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面不显示选择退款的方式）</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>待收货（商家发货后流转）</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>用户地址信息</li>\n<li>各种商品信息（图片，名称，规格，单价，数量）</li>\n<li>商品总金额</li>\n<li>优惠金额</li>\n<li>积分抵扣金额</li>\n<li>运费</li>\n<li>订单实付金额</li>\n<li>订单编号</li>\n<li>下单时间</li>\n<li>支付时间</li>\n<li>支付方式（可无）</li>\n<li>备注</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"待收货\"><a href=\"#待收货\" class=\"headerlink\" title=\"待收货\"></a>待收货</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>自动确认收货倒计时（默认自发货时间起 10 天）（如客户未要求，默认不需要）</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>确认收货（高亮）</li>\n<li>批量退款（分仅退款和退款退货，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面选择退款的方式）</li>\n<li>查看物流</li>\n<li>退款状态（该按钮只显示在各个商品上，并且该商品已申请退款，点击跳转对应的退款详情页）（状态有 审核中 / 待上传物流信息 / 退款成功 / 商家已驳回 / 已撤回）</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>交易完成（确认收货后流转）</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>用户地址信息</li>\n<li>各种商品信息（图片，名称，规格，单价，数量）</li>\n<li>商品总金额</li>\n<li>优惠金额</li>\n<li>积分抵扣金额</li>\n<li>运费</li>\n<li>订单实付金额</li>\n<li>订单编号</li>\n<li>下单时间</li>\n<li>支付时间</li>\n<li>支付方式（可无）</li>\n<li>发货时间</li>\n<li>备注</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"交易完成\"><a href=\"#交易完成\" class=\"headerlink\" title=\"交易完成\"></a>交易完成</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>立即评价（高亮）（根据产品需求是否展示）</li>\n<li>查看物流</li>\n<li>批量退款（分仅退款和退款退货，点击后底部出个弹窗，弹窗内容为商品列表，用于勾选需要退款的商品，选完提交后跳转表单页面，在表单页面选择退款的方式）</li>\n<li>退款状态（该按钮只显示在各个商品上，并且该商品已申请退款，点击跳转对应的退款详情页）（状态有 审核中 / 待上传物流信息 / 退款成功 / 商家已驳回 / 已撤回）</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>用户地址信息</li>\n<li>各种商品信息（图片，名称，规格，单价，数量）</li>\n<li>商品总金额</li>\n<li>优惠金额</li>\n<li>积分抵扣金额</li>\n<li>运费</li>\n<li>订单实付金额</li>\n<li>订单编号</li>\n<li>下单时间</li>\n<li>支付时间</li>\n<li>支付方式（可无）</li>\n<li>发货时间</li>\n<li>收货时间</li>\n<li>备注</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"交易关闭\"><a href=\"#交易关闭\" class=\"headerlink\" title=\"交易关闭\"></a>交易关闭</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>用户地址信息</li>\n<li>各种商品信息（图片，名称，规格，单价，数量）</li>\n<li>商品总金额</li>\n<li>优惠金额</li>\n<li>积分抵扣金额</li>\n<li>运费</li>\n<li>订单实付金额</li>\n<li>订单编号</li>\n<li>下单时间</li>\n<li>备注</li>\n</ul>\n<p>以下由上一状态决定是否显示</p>\n<ul>\n<li>支付时间</li>\n<li>支付方式（可无）</li>\n<li>发货时间</li>\n<li>收货时间</li>\n</ul>\n</li>\n</ol>\n<hr>\n<hr>\n<h2 id=\"二、退款订单状态（仅退款和退款退货）\"><a href=\"#二、退款订单状态（仅退款和退款退货）\" class=\"headerlink\" title=\"二、退款订单状态（仅退款和退款退货）\"></a>二、退款订单状态（仅退款和退款退货）</h2><ol>\n<li>审核中（<strong>审核中有 2 种情况，第一种是用户提交申请后，第二种是用户上传物流信息后</strong>）</li>\n<li>待上传物流信息(<strong>退款退货下显示，仅退款不显示</strong>)</li>\n<li>退款成功</li>\n<li>商家已驳回(<strong>商家可以在任意阶段驳回用户的申请</strong>)</li>\n<li>已撤回</li>\n</ol>\n<p><strong>注意：</strong></p>\n<ol>\n<li><p>联系客服这个按钮不在按钮列表显示，统一加在退款详情页面内容中。</p>\n</li>\n<li><p>商家收到用户退货商品后，如要驳回，需自行联系用户，告知其退还货物订单号，前台页面不再展示相关订单信息。</p>\n</li>\n<li><p>订单列表需展示退款类型（退款退货/仅退款）</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"审核中\"><a href=\"#审核中\" class=\"headerlink\" title=\"审核中\"></a>审核中</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>撤回申请</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>待上传物流信息（用户提交退款申请后流转）</li>\n<li>退款成功（商家退款后流转）</li>\n<li>已驳回（商家驳回用户申请后流转）</li>\n<li>已撤回（用户撤回申请后流转）</li>\n</ul>\n</li>\n<li><p>详情展示内容</p>\n<ul>\n<li>退款商品信息（图片，名称，规格，单价，数量）</li>\n<li>退款方式</li>\n<li>退款金额</li>\n<li>备注</li>\n<li>退款单号</li>\n<li>申请时间</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"待上传物流信息（退款退货显示）\"><a href=\"#待上传物流信息（退款退货显示）\" class=\"headerlink\" title=\"待上传物流信息（退款退货显示）\"></a>待上传物流信息（退款退货显示）</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>上传物流</li>\n<li>撤回申请</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>审核中（用户上传物流信息后流转）</li>\n<li>已撤回（用户撤回申请后流转）</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"退款成功\"><a href=\"#退款成功\" class=\"headerlink\" title=\"退款成功\"></a>退款成功</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"商家已驳回\"><a href=\"#商家已驳回\" class=\"headerlink\" title=\"商家已驳回\"></a>商家已驳回</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"已撤回\"><a href=\"#已撤回\" class=\"headerlink\" title=\"已撤回\"></a>已撤回</h3><ol>\n<li><p>功能</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>按钮</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n<li><p>状态流转</p>\n<ul>\n<li>无</li>\n</ul>\n</li>\n</ol>\n<hr>\n<hr>\n<h2 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h2><p><img src=\"/../image/process.png\" alt=\"process\" title=\"流程图\"></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}